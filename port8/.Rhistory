knitr::opts_chunk$set(echo = TRUE)
library(lavaan)
library(tidyverse)
library(psych)
library(MASS)
library(mvnormalTest)
library(semPlot)
demo.model <- '
y ~ .5*f
f =~ .8*x1 + .8*x2 + .8*x3 + .8*x4 + .8*x5
x1 ~~ (1-.8^2)*x1
x2 ~~ (1-.8^2)*x2
x3 ~~ (1-.8^2)*x3
x4 ~~ (1-.8^2)*x4
x5 ~~ (1-.8^2)*x5
'
simData <- lavaan::simulateData(demo.model, sample.nobs=200)
# see the describtive stats
psych::describe(simData)
# multivariate nurmality test
mv<-mardia(simData)
mv
#?simulateData
sim.cor <-cor(simData, use="pairwise.complete.obs", method="pearson")
sim.cor
(1.07)^2
hey2<-'
y ~ 1 + x1
'
hey2fit<-sem(hey2,data=simData)
summary(hey2fit)
semPlot::semPaths(hey2fit)
hey2<-'
y ~ 1 + x1
x1~~x1
'
hey2fit<-sem(hey2,data=simData)
summary(hey2fit)
semPlot::semPaths(hey2fit)
hey<-lm(y~x2, simData)
summary(hey)
hey2<-'
y ~ 1 + x2
x2~~x2
'
hey2fit<-sem(hey2,data=simData)
summary(hey2fit)
semPlot::semPaths(hey2fit)
(1.087)^2
set.seed(1234)
x<-rnorm(100)
m<-0.5*x + rnorm(100)
y<-0.7*m + rnorm(100)
data <-data.frame(x=x,m=m,y=y)
View(data)
library(pacman)
install.packages('pacman')
knitr::opts_chunk$set(echo = TRUE)
medmodel<-'
y~c*x
m~a*x
y~b*m
# indirect effect (a*b)
ab:=a*b
# total effect
total:=c+(a*b)
set.seed(1234)
x<-rnorm(100)
m<-0.5*x + rnorm(100)
y<-0.7*m + rnorm(100)
data <-data.frame(x=x,m=m,y=y)
medmodel<-'
y~c*x
m~a*x
y~b*m
# indirect effect (a*b)
ab:=a*b
# total effect
total:=c+(a*b)
'
medmodel_m<-sem(medmodel, data=data)
library(lavaan)
library(tidyverse)
library(psych)
library(MASS)
library(mvnormalTest)
library(semPlot)
demo.model <- '
y ~ .5*f
f =~ .8*x1 + .8*x2 + .8*x3 + .8*x4 + .8*x5
x1 ~~ (1-.8^2)*x1
x2 ~~ (1-.8^2)*x2
x3 ~~ (1-.8^2)*x3
x4 ~~ (1-.8^2)*x4
x5 ~~ (1-.8^2)*x5
'
simData <- lavaan::simulateData(demo.model, sample.nobs=200)
# see the describtive stats
psych::describe(simData)
# multivariate nurmality test
mv<-mardia(simData)
mv
#?simulateData
sim.cor <-cor(simData, use="pairwise.complete.obs", method="pearson")
sim.cor
tofit.model <- '
y ~ f
f =~ x1+ x2 + x3 + x4 + x5
x1 ~~ x1
x2 ~~ x2
x3~~x3
x4~~x4
x5~~x5
'
tofit.model_m <- sem(tofit.model, simData)
summary(tofit.model_m, fit.measures=T)
inspect(tofit.model_m)
semPlot::semPaths(tofit.model_m)
hey<-lm(y~x2, simData)
summary(hey)
hey2<-'
y ~ 1 + x2
x2~~x2
'
hey2fit<-sem(hey2,data=simData)
summary(hey2fit)
semPlot::semPaths(hey2fit)
set.seed(1234)
x<-rnorm(100)
m<-0.5*x + rnorm(100)
y<-0.7*m + rnorm(100)
data <-data.frame(x=x,m=m,y=y)
medmodel<-'
y~c*x
m~a*x
y~b*m
# indirect effect (a*b)
ab:=a*b
# total effect
total:=c+(a*b)
'
medmodel_m<-sem(medmodel, data=data)
summary(medmodel_m, fit.measures=T)
semPaths(medmodel_m)
summary(medmodel_m, fit.measures=T)
set.seed(1234)
x<-rnorm(100)
m<-0.5*x + rnorm(100)
y<-0.7*m + rnorm(100)
data <-data.frame(x=x,m=m,y=y)
medmodel_m<-sem(medmodel, data=data)
summary(medmodel_m, fit.measures=T)
semPaths(medmodel_m)
library(foreign)
dat <- read.spss("https://stats.idre.ucla.edu/wp-content/uploads/2018/05/SAQ.sav",
to.data.frame=TRUE, use.value.labels = FALSE)
View(dat)
head(dat,10)
head(dat,10)
?cfa()
cfa<- '
f =~ q01 + q02 + q03 + q04 + q05 + q06 + q07 + q08'
cfa8<- cfa(cfa, data=dat, std.lv=TRUE)
#std.lv=T automatically standardize the variance.
summary(cfa8, fit.measures=T, standardized=T)
round(cor(dat[,1:8]),2)
semPaths(cfa8)
